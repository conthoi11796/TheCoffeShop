package com.thecoffeshop.Models;
// Generated Oct 26, 2018 8:38:01 PM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Schedule generated by hbm2java
 */
@Entity
@Table(name = "schedule", catalog = "luanvan")
public class Schedule implements java.io.Serializable {

	private int scId;
	private Date scTimestart;
	private Date scTimefinish;
	private Float scPayrate;
	private String createBy;
	private Date createAt;
	private String updateBy;
	private Date updateAt;
	private Boolean isDelete;
	private String deleteBy;
	private Date deleteAt;
	private Set<Register> registers = new HashSet<Register>(0);

	public Schedule() {
	}

	public Schedule(int scId) {
		this.scId = scId;
	}

	public Schedule(int scId, Date scTimestart, Date scTimefinish, Float scPayrate, String createBy, Date createAt,
			String updateBy, Date updateAt, Boolean isDelete, String deleteBy, Date deleteAt, Set<Register> registers) {
		this.scId = scId;
		this.scTimestart = scTimestart;
		this.scTimefinish = scTimefinish;
		this.scPayrate = scPayrate;
		this.createBy = createBy;
		this.createAt = createAt;
		this.updateBy = updateBy;
		this.updateAt = updateAt;
		this.isDelete = isDelete;
		this.deleteBy = deleteBy;
		this.deleteAt = deleteAt;
		this.registers = registers;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "SC_ID", unique = true, nullable = false)
	public int getScId() {
		return this.scId;
	}

	public void setScId(int scId) {
		this.scId = scId;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "SC_TIMESTART", length = 8)
	public Date getScTimestart() {
		return this.scTimestart;
	}

	public void setScTimestart(Date scTimestart) {
		this.scTimestart = scTimestart;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "SC_TIMEFINISH", length = 8)
	public Date getScTimefinish() {
		return this.scTimefinish;
	}

	public void setScTimefinish(Date scTimefinish) {
		this.scTimefinish = scTimefinish;
	}

	@Column(name = "SC_PAYRATE", precision = 12, scale = 0)
	public Float getScPayrate() {
		return this.scPayrate;
	}

	public void setScPayrate(Float scPayrate) {
		this.scPayrate = scPayrate;
	}

	@Column(name = "CREATE_BY", length = 7)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_AT", length = 19)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	@Column(name = "UPDATE_BY", length = 7)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_AT", length = 19)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@Column(name = "IS_DELETE")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	@Column(name = "DELETE_BY", length = 7)
	public String getDeleteBy() {
		return this.deleteBy;
	}

	public void setDeleteBy(String deleteBy) {
		this.deleteBy = deleteBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETE_AT", length = 19)
	public Date getDeleteAt() {
		return this.deleteAt;
	}

	public void setDeleteAt(Date deleteAt) {
		this.deleteAt = deleteAt;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "schedule")
	public Set<Register> getRegisters() {
		return this.registers;
	}

	public void setRegisters(Set<Register> registers) {
		this.registers = registers;
	}

}
