package com.thecoffeshop.Models;
// Generated Nov 6, 2018 1:02:23 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Booktable generated by hbm2java
 */
@Entity
@Table(name = "booktable", catalog = "luanvan")
public class Booktable implements java.io.Serializable {

	private BooktableId id;
	private Customer customer;
	private Dinnertable dinnertable;
	private Employee employee;
	private Date startdatetime;
	private Boolean status;
	private String notice;
	private int countpeople;
	private String createby;
	private Date createat;
	private String updateby;
	private Date updateat;
	private Boolean isdelete;
	private String deleteby;
	private Date deleteat;

	public Booktable() {
	}

	public Booktable(BooktableId id, Customer customer, Dinnertable dinnertable, Employee employee) {
		this.id = id;
		this.customer = customer;
		this.dinnertable = dinnertable;
		this.employee = employee;
	}

	public Booktable(BooktableId id, Customer customer, Dinnertable dinnertable, Employee employee, Date startdatetime,
			Boolean status, String createby, Date createat, String updateby, Date updateat, Boolean isdelete,
			String deleteby, Date deleteat) {
		this.id = id;
		this.customer = customer;
		this.dinnertable = dinnertable;
		this.employee = employee;
		this.startdatetime = startdatetime;
		this.status = status;
		this.createby = createby;
		this.createat = createat;
		this.updateby = updateby;
		this.updateat = updateat;
		this.isdelete = isdelete;
		this.deleteby = deleteby;
		this.deleteat = deleteat;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "customerid", column = @Column(name = "CUSTOMERID", nullable = false)),
			@AttributeOverride(name = "dinnertableid", column = @Column(name = "DINNERTABLEID", nullable = false)),
			@AttributeOverride(name = "employeeid", column = @Column(name = "EMPLOYEEID", nullable = false, length = 7)) })
	public BooktableId getId() {
		return this.id;
	}

	public void setId(BooktableId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CUSTOMERID", nullable = false, insertable = false, updatable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DINNERTABLEID", nullable = false, insertable = false, updatable = false)
	public Dinnertable getDinnertable() {
		return this.dinnertable;
	}

	public void setDinnertable(Dinnertable dinnertable) {
		this.dinnertable = dinnertable;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EMPLOYEEID", nullable = false, insertable = false, updatable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "STARTDATETIME", length = 19)
	public Date getStartdatetime() {
		return this.startdatetime;
	}

	public void setStartdatetime(Date startdatetime) {
		this.startdatetime = startdatetime;
	}

	@Column(name = "STATUS")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}
	
	@Column(name = "NOTICE", length = 7)
	public String getNotice() {
		return this.createby;
	}

	public void setNotice(String notice) {
		this.notice = notice;
	}
	
	@Column(name = "COUNTPEOPLE", nullable = false, length = 7)
	public int getCountpeople() {
		return this.countpeople;
	}

	public void setCountpeople(int countpeople) {
		this.countpeople = countpeople;
	}

	@Column(name = "CREATEBY", length = 7)
	public String getCreateby() {
		return this.createby;
	}

	public void setCreateby(String createby) {
		this.createby = createby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEAT", length = 19)
	public Date getCreateat() {
		return this.createat;
	}

	public void setCreateat(Date createat) {
		this.createat = createat;
	}

	@Column(name = "UPDATEBY", length = 7)
	public String getUpdateby() {
		return this.updateby;
	}

	public void setUpdateby(String updateby) {
		this.updateby = updateby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATEAT", length = 19)
	public Date getUpdateat() {
		return this.updateat;
	}

	public void setUpdateat(Date updateat) {
		this.updateat = updateat;
	}

	@Column(name = "ISDELETE")
	public Boolean getIsdelete() {
		return this.isdelete;
	}

	public void setIsdelete(Boolean isdelete) {
		this.isdelete = isdelete;
	}

	@Column(name = "DELETEBY", length = 7)
	public String getDeleteby() {
		return this.deleteby;
	}

	public void setDeleteby(String deleteby) {
		this.deleteby = deleteby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETEAT", length = 19)
	public Date getDeleteat() {
		return this.deleteat;
	}

	public void setDeleteat(Date deleteat) {
		this.deleteat = deleteat;
	}

}
