package com.thecoffeshop.Models;
// Generated Nov 6, 2018 1:02:23 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Register generated by hbm2java
 */
@Entity
@Table(name = "register", catalog = "luanvan")
public class Register implements java.io.Serializable {

	private RegisterId id;
	private Employee employee;
	private Schedule schedule;
	private Date registerid;
	private Short result;
	private String createby;
	private Date createat;
	private String updateby;
	private Date updateat;
	private Boolean isdelete;
	private String deleteby;
	private Date deleteat;

	public Register() {
	}

	public Register(RegisterId id, Employee employee, Schedule schedule) {
		this.id = id;
		this.employee = employee;
		this.schedule = schedule;
	}

	public Register(RegisterId id, Employee employee, Schedule schedule, Date registerid, Short result, String createby,
			Date createat, String updateby, Date updateat, Boolean isdelete, String deleteby, Date deleteat) {
		this.id = id;
		this.employee = employee;
		this.schedule = schedule;
		this.registerid = registerid;
		this.result = result;
		this.createby = createby;
		this.createat = createat;
		this.updateby = updateby;
		this.updateat = updateat;
		this.isdelete = isdelete;
		this.deleteby = deleteby;
		this.deleteat = deleteat;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "employeeid", column = @Column(name = "EMPLOYEEID", nullable = false, length = 7)),
			@AttributeOverride(name = "scheduleid", column = @Column(name = "SCHEDULEID", nullable = false, length = 7)) })
	public RegisterId getId() {
		return this.id;
	}

	public void setId(RegisterId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EMPLOYEEID", nullable = false, insertable = false, updatable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SCHEDULEID", nullable = false, insertable = false, updatable = false)
	public Schedule getSchedule() {
		return this.schedule;
	}

	public void setSchedule(Schedule schedule) {
		this.schedule = schedule;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "REGISTERID", length = 10)
	public Date getRegisterid() {
		return this.registerid;
	}

	public void setRegisterid(Date registerid) {
		this.registerid = registerid;
	}

	@Column(name = "RESULT", precision = 3, scale = 0)
	public Short getResult() {
		return this.result;
	}

	public void setResult(Short result) {
		this.result = result;
	}

	@Column(name = "CREATEBY", length = 7)
	public String getCreateby() {
		return this.createby;
	}

	public void setCreateby(String createby) {
		this.createby = createby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEAT", length = 19)
	public Date getCreateat() {
		return this.createat;
	}

	public void setCreateat(Date createat) {
		this.createat = createat;
	}

	@Column(name = "UPDATEBY", length = 7)
	public String getUpdateby() {
		return this.updateby;
	}

	public void setUpdateby(String updateby) {
		this.updateby = updateby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATEAT", length = 19)
	public Date getUpdateat() {
		return this.updateat;
	}

	public void setUpdateat(Date updateat) {
		this.updateat = updateat;
	}

	@Column(name = "ISDELETE")
	public Boolean getIsdelete() {
		return this.isdelete;
	}

	public void setIsdelete(Boolean isdelete) {
		this.isdelete = isdelete;
	}

	@Column(name = "DELETEBY", length = 7)
	public String getDeleteby() {
		return this.deleteby;
	}

	public void setDeleteby(String deleteby) {
		this.deleteby = deleteby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETEAT", length = 19)
	public Date getDeleteat() {
		return this.deleteat;
	}

	public void setDeleteat(Date deleteat) {
		this.deleteat = deleteat;
	}

}
