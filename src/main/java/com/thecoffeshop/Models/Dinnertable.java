package com.thecoffeshop.Models;
// Generated Nov 6, 2018 1:02:23 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Dinnertable generated by hbm2java
 */
@Entity
@Table(name = "dinnertable", catalog = "luanvan")
public class Dinnertable implements java.io.Serializable {

	private int dinnertableid;
	private String name;
	private Integer countchair;
	private String createby;
	private Date createat;
	private String updateby;
	private Date updateat;
	private Boolean isdelete;
	private String deleteby;
	private Date deleteat;
	private Set<Booktable> booktables = new HashSet<Booktable>(0);
	private Set<Bill> bills = new HashSet<Bill>(0);
	private Set<Tablestatusdetail> tablestatusdetails = new HashSet<Tablestatusdetail>(0);
	private Set<Image> images = new HashSet<Image>(0);

	public Dinnertable() {
	}

	public Dinnertable(int dinnertableid) {
		this.dinnertableid = dinnertableid;
	}

	public Dinnertable(int dinnertableid, String name, Integer countchair, String createby, Date createat,
			String updateby, Date updateat, Boolean isdelete, String deleteby, Date deleteat, Set<Booktable> booktables,
			Set<Bill> bills, Set<Tablestatusdetail> tablestatusdetails, Set<Image> images) {
		this.dinnertableid = dinnertableid;
		this.name = name;
		this.countchair = countchair;
		this.createby = createby;
		this.createat = createat;
		this.updateby = updateby;
		this.updateat = updateat;
		this.isdelete = isdelete;
		this.deleteby = deleteby;
		this.deleteat = deleteat;
		this.booktables = booktables;
		this.bills = bills;
		this.tablestatusdetails = tablestatusdetails;
		this.images = images;
	}

	@Id

	@Column(name = "DINNERTABLEID", unique = true, nullable = false)
	public int getDinnertableid() {
		return this.dinnertableid;
	}

	public void setDinnertableid(int dinnertableid) {
		this.dinnertableid = dinnertableid;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "COUNTCHAIR")
	public Integer getCountchair() {
		return this.countchair;
	}

	public void setCountchair(Integer countchair) {
		this.countchair = countchair;
	}

	@Column(name = "CREATEBY", length = 7)
	public String getCreateby() {
		return this.createby;
	}

	public void setCreateby(String createby) {
		this.createby = createby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEAT", length = 19)
	public Date getCreateat() {
		return this.createat;
	}

	public void setCreateat(Date createat) {
		this.createat = createat;
	}

	@Column(name = "UPDATEBY", length = 7)
	public String getUpdateby() {
		return this.updateby;
	}

	public void setUpdateby(String updateby) {
		this.updateby = updateby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATEAT", length = 19)
	public Date getUpdateat() {
		return this.updateat;
	}

	public void setUpdateat(Date updateat) {
		this.updateat = updateat;
	}

	@Column(name = "ISDELETE")
	public Boolean getIsdelete() {
		return this.isdelete;
	}

	public void setIsdelete(Boolean isdelete) {
		this.isdelete = isdelete;
	}

	@Column(name = "DELETEBY", length = 7)
	public String getDeleteby() {
		return this.deleteby;
	}

	public void setDeleteby(String deleteby) {
		this.deleteby = deleteby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETEAT", length = 19)
	public Date getDeleteat() {
		return this.deleteat;
	}

	public void setDeleteat(Date deleteat) {
		this.deleteat = deleteat;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "dinnertable")
	public Set<Booktable> getBooktables() {
		return this.booktables;
	}

	public void setBooktables(Set<Booktable> booktables) {
		this.booktables = booktables;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "dinnertable")
	public Set<Bill> getBills() {
		return this.bills;
	}

	public void setBills(Set<Bill> bills) {
		this.bills = bills;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "dinnertable")
	public Set<Tablestatusdetail> getTablestatusdetails() {
		return this.tablestatusdetails;
	}

	public void setTablestatusdetails(Set<Tablestatusdetail> tablestatusdetails) {
		this.tablestatusdetails = tablestatusdetails;
	}

	@ManyToMany(fetch = FetchType.EAGER, mappedBy = "dinnertables")
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

}
