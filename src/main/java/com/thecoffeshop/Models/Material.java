package com.thecoffeshop.Models;
// Generated Nov 6, 2018 1:02:23 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Material generated by hbm2java
 */
@Entity
@Table(name = "material", catalog = "luanvan")
public class Material implements java.io.Serializable {

	private Integer materialid;
	private Unit unit;
	private String name;
	private String createby;
	private Date createat;
	private String updateby;
	private Date updateat;
	private Boolean isdelete;
	private String deleteby;
	private Date deleteat;
	private Set<Materialdetail> materialdetails = new HashSet<Materialdetail>(0);
	private Set<Image> images = new HashSet<Image>(0);

	public Material() {
	}

	public Material(Unit unit, String name, String createby, Date createat, String updateby, Date updateat,
			Boolean isdelete, String deleteby, Date deleteat, Set<Materialdetail> materialdetails, Set<Image> images) {
		this.unit = unit;
		this.name = name;
		this.createby = createby;
		this.createat = createat;
		this.updateby = updateby;
		this.updateat = updateat;
		this.isdelete = isdelete;
		this.deleteby = deleteby;
		this.deleteat = deleteat;
		this.materialdetails = materialdetails;
		this.images = images;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "MATERIALID", unique = true, nullable = false)
	public Integer getMaterialid() {
		return this.materialid;
	}

	public void setMaterialid(Integer materialid) {
		this.materialid = materialid;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "UNITID")
	public Unit getUnit() {
		return this.unit;
	}

	public void setUnit(Unit unit) {
		this.unit = unit;
	}

	@Column(name = "NAME")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "CREATEBY", length = 7)
	public String getCreateby() {
		return this.createby;
	}

	public void setCreateby(String createby) {
		this.createby = createby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEAT", length = 19)
	public Date getCreateat() {
		return this.createat;
	}

	public void setCreateat(Date createat) {
		this.createat = createat;
	}

	@Column(name = "UPDATEBY", length = 7)
	public String getUpdateby() {
		return this.updateby;
	}

	public void setUpdateby(String updateby) {
		this.updateby = updateby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATEAT", length = 19)
	public Date getUpdateat() {
		return this.updateat;
	}

	public void setUpdateat(Date updateat) {
		this.updateat = updateat;
	}

	@Column(name = "ISDELETE")
	public Boolean getIsdelete() {
		return this.isdelete;
	}

	public void setIsdelete(Boolean isdelete) {
		this.isdelete = isdelete;
	}

	@Column(name = "DELETEBY", length = 7)
	public String getDeleteby() {
		return this.deleteby;
	}

	public void setDeleteby(String deleteby) {
		this.deleteby = deleteby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETEAT", length = 19)
	public Date getDeleteat() {
		return this.deleteat;
	}

	public void setDeleteat(Date deleteat) {
		this.deleteat = deleteat;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "material")
	public Set<Materialdetail> getMaterialdetails() {
		return this.materialdetails;
	}

	public void setMaterialdetails(Set<Materialdetail> materialdetails) {
		this.materialdetails = materialdetails;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "imageofmaterial", catalog = "luanvan", joinColumns = {
			@JoinColumn(name = "MATERIALID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "IMAGEID", nullable = false, updatable = false) })
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

}
