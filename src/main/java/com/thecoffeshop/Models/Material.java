package com.thecoffeshop.Models;
// Generated Oct 26, 2018 8:38:01 PM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Material generated by hbm2java
 */
@Entity
@Table(name = "material", catalog = "luanvan")
public class Material implements java.io.Serializable {

	private String maId;
	private Unit unit;
	private String maName;
	private String createBy;
	private Date createAt;
	private String updateBy;
	private Date updateAt;
	private Boolean isDelete;
	private String deleteBy;
	private Date deleteAt;
	private Set<Materialdetail> materialdetails = new HashSet<Materialdetail>(0);
	private Set<Image> images = new HashSet<Image>(0);

	public Material() {
	}

	public Material(String maId) {
		this.maId = maId;
	}

	public Material(String maId, Unit unit, String maName, String createBy, Date createAt, String updateBy,
			Date updateAt, Boolean isDelete, String deleteBy, Date deleteAt, Set<Materialdetail> materialdetails,
			Set<Image> images) {
		this.maId = maId;
		this.unit = unit;
		this.maName = maName;
		this.createBy = createBy;
		this.createAt = createAt;
		this.updateBy = updateBy;
		this.updateAt = updateAt;
		this.isDelete = isDelete;
		this.deleteBy = deleteBy;
		this.deleteAt = deleteAt;
		this.materialdetails = materialdetails;
		this.images = images;
	}

	@Id

	@Column(name = "MA_ID", unique = true, nullable = false, length = 7)
	public String getMaId() {
		return this.maId;
	}

	public void setMaId(String maId) {
		this.maId = maId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UN_ID")
	public Unit getUnit() {
		return this.unit;
	}

	public void setUnit(Unit unit) {
		this.unit = unit;
	}

	@Column(name = "MA_NAME")
	public String getMaName() {
		return this.maName;
	}

	public void setMaName(String maName) {
		this.maName = maName;
	}

	@Column(name = "CREATE_BY", length = 7)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_AT", length = 19)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	@Column(name = "UPDATE_BY", length = 7)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_AT", length = 19)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@Column(name = "IS_DELETE")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	@Column(name = "DELETE_BY", length = 7)
	public String getDeleteBy() {
		return this.deleteBy;
	}

	public void setDeleteBy(String deleteBy) {
		this.deleteBy = deleteBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETE_AT", length = 19)
	public Date getDeleteAt() {
		return this.deleteAt;
	}

	public void setDeleteAt(Date deleteAt) {
		this.deleteAt = deleteAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "material")
	public Set<Materialdetail> getMaterialdetails() {
		return this.materialdetails;
	}

	public void setMaterialdetails(Set<Materialdetail> materialdetails) {
		this.materialdetails = materialdetails;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "imageofmaterial", catalog = "luanvan", joinColumns = {
			@JoinColumn(name = "MA_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "IMG_ID", nullable = false, updatable = false) })
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

}
