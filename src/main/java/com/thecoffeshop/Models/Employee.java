package com.thecoffeshop.Models;
// Generated Oct 24, 2018 11:35:31 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee")
public class Employee implements java.io.Serializable {

	private String emId;
	private Salary salary;
	private String emName;
	private Boolean emSex;
	private Integer emPhonenumber;
	private String emAddress;
	private String emUsername;
	private String emPassword;
	private String createBy;
	private Date createAt;
	private String updateBy;
	private Date updateAt;
	private Boolean isDelete;
	private String deleteBy;
	private Date deleteAt;
	private Set<Bill> bills = new HashSet<Bill>(0);
	private Set<Atposition> atpositions = new HashSet<Atposition>(0);
	private Set<Exportbill> exportbills = new HashSet<Exportbill>(0);
	private Set<Register> registers = new HashSet<Register>(0);
	private Set<Image> images = new HashSet<Image>(0);
	private Set<Booktable> booktables = new HashSet<Booktable>(0);

	public Employee() {
	}

	public Employee(String emId) {
		this.emId = emId;
	}

	public Employee(String emId, Salary salary, String emName, Boolean emSex, Integer emPhonenumber, String emAddress,
			String emUsername, String emPassword, String createBy, Date createAt, String updateBy, Date updateAt,
			Boolean isDelete, String deleteBy, Date deleteAt, Set<Bill> bills, Set<Atposition> atpositions,
			Set<Exportbill> exportbills, Set<Register> registers, Set<Image> images, Set<Booktable> booktables) {
		this.emId = emId;
		this.salary = salary;
		this.emName = emName;
		this.emSex = emSex;
		this.emPhonenumber = emPhonenumber;
		this.emAddress = emAddress;
		this.emUsername = emUsername;
		this.emPassword = emPassword;
		this.createBy = createBy;
		this.createAt = createAt;
		this.updateBy = updateBy;
		this.updateAt = updateAt;
		this.isDelete = isDelete;
		this.deleteBy = deleteBy;
		this.deleteAt = deleteAt;
		this.bills = bills;
		this.atpositions = atpositions;
		this.exportbills = exportbills;
		this.registers = registers;
		this.images = images;
		this.booktables = booktables;
	}

	@Id

	@Column(name = "EM_ID", unique = true, nullable = false, length = 7)
	public String getEmId() {
		return this.emId;
	}

	public void setEmId(String emId) {
		this.emId = emId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SA_ID")
	public Salary getSalary() {
		return this.salary;
	}

	public void setSalary(Salary salary) {
		this.salary = salary;
	}

	@Column(name = "EM_NAME")
	public String getEmName() {
		return this.emName;
	}

	public void setEmName(String emName) {
		this.emName = emName;
	}

	@Column(name = "EM_SEX")
	public Boolean getEmSex() {
		return this.emSex;
	}

	public void setEmSex(Boolean emSex) {
		this.emSex = emSex;
	}

	@Column(name = "EM_PHONENUMBER", precision = 8, scale = 0)
	public Integer getEmPhonenumber() {
		return this.emPhonenumber;
	}

	public void setEmPhonenumber(Integer emPhonenumber) {
		this.emPhonenumber = emPhonenumber;
	}

	@Column(name = "EM_ADDRESS")
	public String getEmAddress() {
		return this.emAddress;
	}

	public void setEmAddress(String emAddress) {
		this.emAddress = emAddress;
	}

	@Column(name = "EM_USERNAME")
	public String getEmUsername() {
		return this.emUsername;
	}

	public void setEmUsername(String emUsername) {
		this.emUsername = emUsername;
	}

	@Column(name = "EM_PASSWORD")
	public String getEmPassword() {
		return this.emPassword;
	}

	public void setEmPassword(String emPassword) {
		this.emPassword = emPassword;
	}

	@Column(name = "CREATE_BY", length = 7)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_AT", length = 19)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	@Column(name = "UPDATE_BY", length = 7)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_AT", length = 19)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@Column(name = "IS_DELETE")
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	@Column(name = "DELETE_BY", length = 7)
	public String getDeleteBy() {
		return this.deleteBy;
	}

	public void setDeleteBy(String deleteBy) {
		this.deleteBy = deleteBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DELETE_AT", length = 19)
	public Date getDeleteAt() {
		return this.deleteAt;
	}

	public void setDeleteAt(Date deleteAt) {
		this.deleteAt = deleteAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Bill> getBills() {
		return this.bills;
	}

	public void setBills(Set<Bill> bills) {
		this.bills = bills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Atposition> getAtpositions() {
		return this.atpositions;
	}

	public void setAtpositions(Set<Atposition> atpositions) {
		this.atpositions = atpositions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Exportbill> getExportbills() {
		return this.exportbills;
	}

	public void setExportbills(Set<Exportbill> exportbills) {
		this.exportbills = exportbills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Register> getRegisters() {
		return this.registers;
	}

	public void setRegisters(Set<Register> registers) {
		this.registers = registers;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Booktable> getBooktables() {
		return this.booktables;
	}

	public void setBooktables(Set<Booktable> booktables) {
		this.booktables = booktables;
	}

}
